#---------------
# Verileri içeri aktarma
#---------------
library(readr)
library(haven)
repeated_measures <- read_sav("~/GitHub/StatMeth2/Statistical-Methods-2/Repetitive_ANOVA/repeated_measures.sav")
View(repeated_measures)
rm(repeated_measures)
rept_data <- read_sav("~/GitHub/StatMeth2/Statistical-Methods-2/Repetitive_ANOVA/repeated_measures.sav")
View(rept_data)
rept_Data <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4) %>%
convert_as_factor(time)
head(rept_data, 3)
library(tidyverse)
library(ggpubr)
library(rstatix)
rept_Data <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4) %>%
convert_as_factor(time)
head(rept_data, 3)
rept_data <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4) %>%
convert_as_factor(time)
head(rept_data, 3)
rept_data <- read_sav("~/GitHub/StatMeth2/Statistical-Methods-2/Repetitive_ANOVA/repeated_measures.sav")
View(rept_data)
rept_data_factor <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4) %>%
convert_as_factor(time)
head(rept_data, 3)
rm(rept_Data)
View(rept_data_factor)
head(rept_data, 3)
head(rept_data_factor, 3)
rept_data_factor %>%
group_by(time) %>%
get_summary_stats(score, type = "mean_sd")
rept_data_factor %>%
group_by(time) %>%
identify_outliers(score)
# Aykırı değer kontrolü
rept_data_factor %>%
group_by(time) %>%
identify_outliers(score)
selfesteem %>%
group_by(time) %>%
shapiro_test(score)
rept_data_factor %>%
group_by(time) %>%
shapiro_test(score)
# ANOVA testi
res.aov <- anova_test(data = rept_data_factor, dv = score, within = time)
# ANOVA testi
res.aov <- anova_test(data = rept_data_factor, dv = score, wid = nrow(rept_data_factor), within = time)
# ANOVA testi
res.aov <- anova_test(data = rept_data_factor, dv = score, wid = nrow(rept_data_factor[1:120]), within = time)
rept_data_factor <- as.data.frame(list(seq(1,120,1)))
View(rept_data_factor)
rept_data_factor <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4) %>%
convert_as_factor(time)
head(rept_data_factor, 3)
rept_data_factor[,3] <- as.data.frame(list(seq(1,120,1)))
colnames(rept_data_factor[,3]) <- ID
colnames(rept_data_factor[,3]) <- C("ıd")
colnames(rept_data_factor[,3]) <- C("ID")
View(rept_data_factor)
View(rept_data_factor)
colnames(rept_data_factor) <- C("time","score","id")
rept_data
#---------------
# Verileri manipüle etme
#---------------
rept_data[,5] <- as.data.frame(list(seq(1,120,1)))
rept_data_factor <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4) %>%
head(rept_data_factor, 3)
rept_data_factor <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4)
View(rept_data_factor)
rm(repot_data_factor)
rm(rept_data_factor)
#---------------
# Verileri manipüle etme
#---------------
rept_data[,5] <- as.data.frame(list(seq(1,120,1)))
#---------------
# Verileri manipüle etme
#---------------
rept_data[,5] <- list(seq(1,120,1))
View(rept_data)
#---------------
# Verileri manipüle etme
#---------------
rept_data[,5] <- list(seq(1,30,1))
View(rept_data)
rp_factor <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4) %>%
convert_as_factor(id,time)
View(rept_data)
colnames(rept_data[,5]) <- c("id")
rp_factor <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4) %>%
convert_as_factor(id,time)
View(rept_data)
colnames(rept_data[,5]) <- c("id")
View(rept_data)
View(rept_data)
rp_factor <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4) %>%
convert_as_factor(id,time)
colnames(rept_data) <- c("TIME1","TIME2","TIM3","TIME4","id")
View(rept_data)
rp_factor <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4) %>%
convert_as_factor(id,time)
colnames(rept_data) <- c("TIME1","TIME2","TIME3","TIME4","id")
rp_factor <- rept_data %>%
gather(key = "time", value = "score", TIME1, TIME2, TIME3, TIME4) %>%
convert_as_factor(id,time)
View(rp_factor)
head(rp_factor, 3)
rp_factor%>%
group_by(time) %>%
get_summary_stats(score, type = "mean_sd")
rp_factor %>%
group_by(time) %>%
identify_outliers(score) # "EXTREME" bir aykırı değer yok
res.aov <- anova_test(data = rp_factor, dv = score, wid = id, within = time)
get_anova_table(res.aov)
View(res.aov)
View(rp_factor)
rp_factor %>%
dunn_test(score~time, p.adjust.method = "bonferroni")
dun_sonuc <- rp_factor %>%
dunn_test(score~time, p.adjust.method = "bonferroni")
dun_sonuc
View(dun_sonuc)
res.aov <- anova_test(data = rp_factor, dv = score, wid = id, within = time)
get_anova_table(res.aov)
anova_test(data = rp_factor, dv = score, wid = id, within = time)
res.aov
rp_factor
# Post-Hoc testi
SNK.test(y=res.aov, trt=time, alpha = 0.05, group=TRUE)
# Post-Hoc testi
TukeyHSD(res.aov, 'time', conf.level=0.95).
# Post-Hoc testi
TukeyHSD(res.aov, 'score', conf.level=0.95).
# Post-Hoc testi
TukeyHSD(res.aov, time, conf.level=0.95).
# Post-Hoc testi
TukeyHSD(res.aov, score, conf.level=0.95).
View(rp_factor)
